group 'cd.go.plugin.config.yaml'
version '0.8.0'

apply plugin: 'java'

project.ext.pluginDesc = [
        version    : project.version,
        goCdVersion: '16.7.0'
]

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'cd.go.plugin', name: 'go-plugin-api', version: '16.6.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.apache.ant', name: 'ant', version: '1.7.1'
    compile group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.13'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

processResources {
    from("src/main/resource-templates") {
        filesMatching('*') {
            expand project.pluginDesc
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

test {
    useJUnit {
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
            {
                exclude "META-INF/*.SF"
                exclude "META-INF/*.DSA"
                exclude "META-INF/*.RSA"
            }
    with jar
}
